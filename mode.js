const rays_in = "M19.999 4C20.5295 4 21.0382 4.21071 21.4132 4.58579C21.7883 4.96086 21.999 5.46957 21.999 6V8C21.999 8.53043 21.7883 9.03914 21.4132 9.41421C21.0382 9.78929 20.5295 10 19.999 10C19.4686 10 18.9599 9.78929 18.5848 9.41421C18.2097 9.03914 17.999 8.53043 17.999 8V6C17.999 5.46957 18.2097 4.96086 18.5848 4.58579C18.9599 4.21071 19.4686 4 19.999 4ZM27.071 29.9L28.485 31.314C28.8622 31.6783 29.3674 31.8799 29.8918 31.8753C30.4162 31.8708 30.9178 31.6604 31.2887 31.2896C31.6595 30.9188 31.8698 30.4172 31.8744 29.8928C31.8789 29.3684 31.6773 28.8632 31.313 28.486L29.899 27.072C29.5218 26.7077 29.0166 26.5061 28.4922 26.5107C27.9678 26.5152 27.4662 26.7255 27.0954 27.0964C26.7246 27.4672 26.5142 27.9688 26.5097 28.4932C26.5051 29.0176 26.7067 29.5228 27.071 29.9ZM31.311 8.686C31.686 9.06105 31.8966 9.56967 31.8966 10.1C31.8966 10.6303 31.686 11.1389 31.311 11.514L29.899 12.928C29.7145 13.119 29.4938 13.2714 29.2498 13.3762C29.0058 13.481 28.7434 13.5362 28.4778 13.5385C28.2123 13.5408 27.9489 13.4902 27.7031 13.3896C27.4573 13.2891 27.234 13.1406 27.0462 12.9528C26.8584 12.765 26.7099 12.5417 26.6094 12.2959C26.5088 12.0501 26.4582 11.7868 26.4605 11.5212C26.4628 11.2556 26.518 10.9932 26.6228 10.7492C26.7276 10.5052 26.88 10.2845 27.071 10.1L28.485 8.686C28.8601 8.31106 29.3687 8.10043 29.899 8.10043C30.4294 8.10043 30.938 8.31106 31.313 8.686H31.311ZM33.999 22C34.5295 22 35.0382 21.7893 35.4132 21.4142C35.7883 21.0391 35.999 20.5304 35.999 20C35.999 19.4696 35.7883 18.9609 35.4132 18.5858C35.0382 18.2107 34.5295 18 33.999 18H31.999C31.4686 18 30.9599 18.2107 30.5848 18.5858C30.2097 18.9609 29.999 19.4696 29.999 20C29.999 20.5304 30.2097 21.0391 30.5848 21.4142C30.9599 21.7893 31.4686 22 31.999 22H33.999ZM19.999 30C20.5295 30 21.0382 30.2107 21.4132 30.5858C21.7883 30.9609 21.999 31.4696 21.999 32V34C21.999 34.5304 21.7883 35.0391 21.4132 35.4142C21.0382 35.7893 20.5295 36 19.999 36C19.4686 36 18.9599 35.7893 18.5848 35.4142C18.2097 35.0391 17.999 34.5304 17.999 34V32C17.999 31.4696 18.2097 30.9609 18.5848 30.5858C18.9599 30.2107 19.4686 30 19.999 30ZM10.099 12.928C10.2847 13.1138 10.5052 13.2612 10.7478 13.3619C10.9905 13.4625 11.2506 13.5143 11.5133 13.5144C11.776 13.5145 12.0362 13.4628 12.2789 13.3624C12.5216 13.262 12.7422 13.1147 12.928 12.929C13.1138 12.7433 13.2613 12.5228 13.3619 12.2802C13.4625 12.0375 13.5143 11.7774 13.5144 11.5147C13.5145 11.252 13.4629 10.9919 13.3624 10.7491C13.262 10.5064 13.1147 10.2858 12.929 10.1L11.513 8.686C11.1358 8.32168 10.6306 8.12009 10.1062 8.12465C9.58183 8.12921 9.0802 8.33955 8.70939 8.71036C8.33857 9.08118 8.12823 9.5828 8.12368 10.1072C8.11912 10.6316 8.32071 11.1368 8.68502 11.514L10.099 12.928ZM12.927 29.9L11.513 31.314C11.1358 31.6783 10.6306 31.8799 10.1062 31.8753C9.58183 31.8708 9.0802 31.6604 8.70939 31.2896C8.33857 30.9188 8.12823 30.4172 8.12368 29.8928C8.11912 29.3684 8.32071 28.8632 8.68502 28.486L10.099 27.072C10.4762 26.7077 10.9814 26.5061 11.5058 26.5107C12.0302 26.5152 12.5318 26.7255 12.9027 27.0964C13.2735 27.4672 13.4838 27.9688 13.4884 28.4932C13.4929 29.0176 13.2913 29.5228 12.927 29.9ZM7.99902 22C8.52946 22 9.03816 21.7893 9.41324 21.4142C9.78831 21.0391 9.99902 20.5304 9.99902 20C9.99902 19.4696 9.78831 18.9609 9.41324 18.5858C9.03816 18.2107 8.52946 18 7.99902 18H5.99902C5.46859 18 4.95988 18.2107 4.58481 18.5858C4.20974 18.9609 3.99902 19.4696 3.99902 20C3.99902 20.5304 4.20974 21.0391 4.58481 21.4142C4.95988 21.7893 5.46859 22 5.99902 22H7.99902Z";
const sun = "M24.9497 24.9497C26.2625 23.637 27 21.8565 27 20C27 18.1435 26.2625 16.363 24.9497 15.0503C23.637 13.7375 21.8565 13 20 13C18.1435 13 16.363 13.7375 15.0503 15.0503C13.7375 16.363 13 18.1435 13 20C13 21.8565 13.7375 23.637 15.0503 24.9497C16.363 26.2625 18.1435 27 20 27C21.8565 27 23.637 26.2625 24.9497 24.9497Z";
                        
const rays_out="M19.999 -18C20.5295 -18 21.0382 -17.7893 21.4132 -17.4142C21.7883 -17.0391 21.999 -16.5304 21.999 -16V-10C21.999 -9.46957 21.7883 -8.96086 21.4132 -8.58579C21.0382 -8.21071 20.5295 -8 19.999 -8C19.4686 -8 18.9599 -8.21071 18.5848 -8.58579C18.2097 -8.96086 17.999 -9.46957 17.999 -10V-16C17.999 -16.5304 18.2097 -17.0391 18.5848 -17.4142C18.9599 -17.7893 19.4686 -18 19.999 -18ZM42.071 43.9L47.485 49.314C47.8622 49.6783 48.3674 49.8799 48.8918 49.8753C49.4162 49.8708 49.9178 49.6605 50.2887 49.2896C50.6595 48.9188 50.8698 48.4172 50.8744 47.8928C50.8789 47.3684 50.6773 46.8632 50.313 46.486L44.899 41.072C44.5218 40.7077 44.0166 40.5061 43.4922 40.5107C42.9678 40.5152 42.4662 40.7255 42.0954 41.0964C41.7246 41.4672 41.5142 41.9688 41.5097 42.4932C41.5051 43.0176 41.7067 43.5228 42.071 43.9ZM49.311 -10.314C49.686 -9.93895 49.8966 -9.43033 49.8966 -8.9C49.8966 -8.36967 49.686 -7.86106 49.311 -7.486L43.899 -2.072C43.7145 -1.88098 43.4938 -1.72862 43.2498 -1.6238C43.0058 -1.51898 42.7434 -1.46381 42.4778 -1.4615C42.2123 -1.45919 41.9489 -1.5098 41.7031 -1.61036C41.4573 -1.71092 41.234 -1.85943 41.0462 -2.04721C40.8584 -2.235 40.7099 -2.4583 40.6094 -2.70409C40.5088 -2.94989 40.4582 -3.21325 40.4605 -3.47881C40.4628 -3.74436 40.518 -4.0068 40.6228 -4.25081C40.7276 -4.49482 40.88 -4.71551 41.071 -4.9L46.485 -10.314C46.8601 -10.6889 47.3687 -10.8996 47.899 -10.8996C48.4294 -10.8996 48.938 -10.6889 49.313 -10.314H49.311ZM55.999 22C56.5295 22 57.0382 21.7893 57.4132 21.4142C57.7883 21.0391 57.999 20.5304 57.999 20C57.999 19.4696 57.7883 18.9609 57.4132 18.5858C57.0382 18.2107 56.5295 18 55.999 18H49.999C49.4686 18 48.9599 18.2107 48.5848 18.5858C48.2097 18.9609 47.999 19.4696 47.999 20C47.999 20.5304 48.2097 21.0391 48.5848 21.4142C48.9599 21.7893 49.4686 22 49.999 22H55.999ZM19.999 47C20.5295 47 21.0382 47.2107 21.4132 47.5858C21.7883 47.9609 21.999 48.4696 21.999 49V55C21.999 55.5304 21.7883 56.0391 21.4132 56.4142C21.0382 56.7893 20.5295 57 19.999 57C19.4686 57 18.9599 56.7893 18.5848 56.4142C18.2097 56.0391 17.999 55.5304 17.999 55V49C17.999 48.4696 18.2097 47.9609 18.5848 47.5858C18.9599 47.2107 19.4686 47 19.999 47ZM-3.90098 -2.072C-3.71529 -1.88618 -3.49482 -1.73875 -3.25215 -1.63814C-3.00949 -1.53752 -2.74938 -1.48569 -2.48669 -1.4856C-2.22399 -1.4855 -1.96384 -1.53715 -1.72111 -1.6376C-1.47837 -1.73804 -1.2578 -1.88531 -1.07198 -2.071C-0.886155 -2.25669 -0.73873 -2.47716 -0.638115 -2.71983C-0.537499 -2.96249 -0.485666 -3.2226 -0.485573 -3.48529C-0.48548 -3.74799 -0.537129 -4.00813 -0.637573 -4.25087C-0.738017 -4.49361 -0.885287 -4.71418 -1.07098 -4.9L-6.48698 -10.314C-6.86418 -10.6783 -7.36938 -10.8799 -7.89378 -10.8753C-8.41817 -10.8708 -8.9198 -10.6605 -9.29061 -10.2896C-9.66143 -9.91882 -9.87177 -9.4172 -9.87632 -8.8928C-9.88088 -8.36841 -9.67929 -7.8632 -9.31498 -7.486L-3.90098 -2.072ZM-1.07298 43.9L-6.48698 49.314C-6.86418 49.6783 -7.36939 49.8799 -7.89378 49.8753C-8.41817 49.8708 -8.9198 49.6605 -9.29062 49.2896C-9.66143 48.9188 -9.87177 48.4172 -9.87632 47.8928C-9.88088 47.3684 -9.67929 46.8632 -9.31498 46.486L-3.90098 41.072C-3.52377 40.7077 -3.01857 40.5061 -2.49417 40.5107C-1.96978 40.5152 -1.46816 40.7255 -1.09734 41.0964C-0.726523 41.4672 -0.516184 41.9688 -0.511627 42.4932C-0.50707 43.0176 -0.708659 43.5228 -1.07298 43.9ZM-9.00098 22C-8.47054 22 -7.96184 21.7893 -7.58676 21.4142C-7.21169 21.0391 -7.00098 20.5304 -7.00098 20C-7.00098 19.4696 -7.21169 18.9609 -7.58676 18.5858C-7.96184 18.2107 -8.47054 18 -9.00098 18H-15.001C-15.5314 18 -16.0401 18.2107 -16.4152 18.5858C-16.7903 18.9609 -17.001 19.4696 -17.001 20C-17.001 20.5304 -16.7903 21.0391 -16.4152 21.4142C-16.0401 21.7893 -15.5314 22 -15.001 22H-9.00098Z"
const moon="M32.88 24.67C26.51 28.21 20.21 24.73 17.67 22.2C15.14 19.67 11.66 13.36 15.2 7C13.78 7.69999 13.41 7.79001 10.96 9.83001C8.41 12.29 6.99991 15.79 7 19.37C6.99991 22.95 8.40991 26.29 10.9599 28.92C13.4899 31.45 16.9199 32.87 20.4999 32.87C24.0799 32.87 27.52 31.45 30.05 28.91C32.41 26.29 32.19 26.09 32.88 24.67Z";

const body = document.body;

const mode_btn = document.querySelector(".mode_btn");
let toggle = false;



mode_btn.addEventListener("click", () => {

    if(toggle==false)
        body.classList.replace('dark','light');
    else
        body.classList.replace('light','dark');

    const timeline = anime.timeline({
        easing: "easeOutQuint",
        duration: 1500,
    });

    timeline.add({
        targets: ".sun",
        top: toggle ? "110vh" : "8vh",
        easing: "easeInOutBack",
    })
    .add({
        targets: ".moon",
        top: toggle ? "8vh" : "110vh",
        easing: "easeInOutBack",
    }, '-=1500')
    .add({
        targets: ".circle",
        d: [{ value: toggle ? sun : moon}],
        fill: toggle ? "#ffffff" : "#0E0931",
    }, '-=1500')
    .add({
        targets: ".rays",
        d: [{ value: toggle ? rays_in : rays_out}],
    }, '-=1500')
    .add({
        targets: ".logo",
        color: toggle ? "#ffffff" : "#0E0931"
    }, '-=1500')
    .add({
        targets: ".bg_dark",
        opacity: toggle ? "1" : "0",
    }, '-=900')
    .add({
        targets: ".bg_light",
        opacity: toggle ? "0" : "1",
    }, '-=1500')
    .add({
        targets: ".noise",
        opacity: toggle ? "0.2" : "0.6",
    }, '-=1500')
    .add({
        targets: ".cloud",
        stopColor: toggle ? "#482C55" : "#ffffff"
    }, '-=1500')
    .add({
        targets: ".mt_b_top",
        stopColor: toggle ? "#0A254D" : "#D0DBEC"
    }, '-=1500')
    .add({
        targets: ".mt_btm",
        stopColor: toggle ? "#0E0931" : "#FFFFFF"
    }, '-=1500')
    .add({
        targets: ".mt_m_top",
        stopColor: toggle ? "#83476B" : "#FFAAB4"
    }, '-=1500')
    .add({
        targets: ".mt_f_top",
        stopColor: toggle ? "#B45C72" : "#FF8CA5"
    }, '-=1500');

    toggle = !toggle;

    mode_btn.disabled = true;
    mode_btn.style.cursor = "default";

    setTimeout(function(){
        mode_btn.disabled = false;
        mode_btn.style.cursor = "pointer";
    },2000);

});


const parList = document.querySelectorAll(".parallax");

document.addEventListener("mousemove", parallax);

function parallax(e){
    parList.forEach(layer => {
        const speed = layer.getAttribute('data-speed')

        const x = (window.innerWidth - e.pageX*speed)/100
        const y = (window.innerHeight - e.pageY*speed)/100

        layer.style.transform = `translateX(${x}px) translateY(${y}px)`
    });
}
